/*
        𓋜  ＢＯＴ ＮＡＭＥ ⇩
         
          𝗍𝖾𝖼𝗁𝗌𝗒𝗇𝖼
         
       𓋜 ＢＯＴ ＯＷＮＥＲ ⇩
         
         𝗄𝗁𝗎𝗅𝖾𝗄𝖺𝗇𝗂 𝖽𝗎𝖻𝖾
         
       𓋜 ＤＥＶＥＬＯＰＥＲ ⇩
         
         𝗄𝗁𝗎𝗅𝖾𝗄𝖺𝗇𝗂 𝖽𝗎𝖻𝖾
         
       𓋜 ＤＥＶ ＬＯＣＡＴＩＯＮ ⇩
         
         𝗓𝗂𝗆𝖻𝖺𝖻𝗐𝖾,𝖻𝗎𝗅𝖺𝗐𝖺𝗒𝗈
         
       𓋜 ＴＥＡＭ ＮＡＭＥ ⇩
         
         𝗍𝖾𝖼𝗁𝗀𝗎𝗒𝗌
         
*/





const { cmd } = require('../command');
const axios = require('axios');
// Techsync 


cmd({
    pattern: "techsyncai",
    alias: ["aiimg", "generateimg", "aiimage","techsyncai"],
    desc: "Generate AI Images using Stable Diffusion",
    category: "ai",
    react: "🤖",
    filename: __filename
},
async (conn, mek, m, { from, q, reply }) => {
    try {
        // Check if prompt is provided
        if (!q) return reply(`
*🤖 TECHSYNC AI IMAGE GENERATOR 🖼️*

*Usage: !techsyncai <image description>*
*Example: !techsyncai Beautiful landscape with mountains*

*Tips:*
- *Be specific in your description*
- *Use descriptive words*
- *Mention style, color, mood*
`);

        // React to show processing
        await m.react("🔄");

        // Construct API URL with the prompt
        const apiUrl = `https://api.davidcyriltech.my.id/diffusion?prompt=${encodeURIComponent(q)}`;

        // Fetch the image from the API
        const response = await axios({
            method: 'get',
            url: apiUrl,
            responseType: 'arraybuffer',
            timeout: 60000 // 60 seconds timeout
        });

        // Check if response is valid
        if (!response.data) {
            return reply("❌ *~Failed to generate image. No data received.`*");
        }

        // Send the generated image
        await conn.sendMessage(from, {
            image: response.data,
            caption: `*🤖 TECHSYNC AI IMAGE GENERATOR 🖼️*

*📝 Prompt:* ${q}

*Generated by Techsync AI*
*Model:* *Stable Diffusion*
`,
            quoted: mek
        });

        // React to successful image generation
        await m.react("✅");

    } catch (error) {
        console.error("*`TechsyncAI Image Generation Error:`*", error);
        
        // React to error
        await m.react("❌");

        // Detailed error handling
        if (error.response) {
            // The request was made and the server responded with a status code
            console.log(error.response.data);
            console.log(error.response.status);
            console.log(error.response.headers);

            if (error.response.status === 429) {
                return reply("⏳ *Too many requests. Please try again later.*");
            } else if (error.response.status === 500) {
                return reply("🚫 *Server error. Unable to generate image.*");
            } else {
                return reply(`❌ *Error:* *${error.response.status}* - *${error.response.statusText}*`);
            }
        } else if (error.request) {
            // The request was made but no response was received
            console.log(error.request);
            return reply("🌐 *No response received from the server. Check your internet connection.*");
        } else {
            // Something happened in setting up the request that triggered an Error
            console.log('Error', error.message);
            return reply(`❌ *An unexpected error occurred: ${error.message}*`);
        }
    }
});
